@page "/login"
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject NavigationManager Navigation
@inject AuthService AuthService
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

<style>
    body{
        background-color: hsl(170, 20%, 85%);
    }

    .form-control:focus {
        border-color: hsl(0, 0%, 100%) !important;
        box-shadow: 0 0 0 0.25rem hsla(170, 100%, 45%, 0.15);
        outline: none;
    }

    a:hover {
        color: hsl(170, 100%, 45%) !important;
        text-decoration: underline !important;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card border-0 shadow-sm" style="background-color: hsl(0, 0%, 100%);">
                <div class="card-header border-0" style="background-color: hsl(170, 100%, 45%); color: hsl(0, 0%, 100%);">
                    <h3 class="text-center mb-0">Login to LieAsocial</h3>
                </div>
                <div class="card-body" style="background-color: hsl(0, 0%, 98%);">
                    <EditForm Model="@this" FormName="loginForm" OnValidSubmit="@HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" />

                        <div class="form-group mb-3">
                            <label for="username" class="form-label" style="color: hsl(170, 100%, 25%);">Username</label>
                            <InputText @bind-Value="username" id="username" class="form-control"
                                       placeholder="Enter username"
                                       style="background-color: hsl(0, 0%, 100%); border-color: hsl(170, 20%, 85%);" />
                            <ValidationMessage For="@(() => username)" class="text-danger" />
                        </div>

                        <div class="form-group mb-3">
                            <label for="password" class="form-label" style="color: hsl(170, 100%, 25%);">Password</label>
                            <InputText type="password" @bind-Value="password" id="password" class="form-control"
                                       placeholder="Enter password"
                                       style="background-color: hsl(0, 0%, 100%); border-color: hsl(170, 20%, 85%);" />
                            <ValidationMessage For="@(() => password)" class="text-danger" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn" disabled="@isLoading"
                                    style="background-color: hsl(170, 100%, 45%); color: hsl(0, 0%, 100%); border: none;">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                    <span>Logging in...</span>
                                }
                                else
                                {
                                    <span>Login</span>
                                }
                            </button>
                        </div>

                        @if (!string.IsNullOrEmpty(statusMessage))
                        {
                            <div class="alert @statusClass mt-3 mb-0" style="background-color: @(statusClass == "alert-success" ? "hsl(170, 100%, 95%)" : "hsl(0, 100%, 95%)");
                                            border-color: @(statusClass == "alert-success" ? "hsl(170, 100%, 85%)" : "hsl(0, 100%, 85%)");
                                            color: @(statusClass == "alert-success" ? "hsl(170, 100%, 25%)" : "hsl(0, 100%, 25%)");">
                                @statusMessage
                            </div>
                        }
                    </EditForm>
                </div>
                <div class="card-footer text-center border-0" style="background-color: hsl(0, 0%, 98%); color: hsl(170, 100%, 25%);">
                    Don't have an account? <a href="/registration" style="color: hsl(170, 100%, 45%);">Sign up here</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string statusMessage = string.Empty;
    private string statusClass = "alert-success";
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await AuthService.InitializeAsync();

        if (AuthService.IsAuthenticated)
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        statusMessage = string.Empty;

        try
        {
            var connectionString = Configuration.GetConnectionString("OdbcConnection");

            if (string.IsNullOrEmpty(connectionString))
            {
                statusMessage = "Database configuration error";
                statusClass = "alert-danger";
                return;
            }

            var loginUser = new LoginUser(username: username, password: password, connectionString);
            bool success = await AuthService.LoginAsync(loginUser);

            if (success)
            {
                statusMessage = "Login successful! Redirecting...";
                statusClass = "alert-success";
                await Task.Delay(1000);
                Navigation.NavigateTo("/");
            }
            else
            {
                statusMessage = "Invalid username or password";
                statusClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            statusMessage = $"Login failed: {ex.Message}";
            statusClass = "alert-danger";
        }
        finally
        {
            isLoading = false;
        }
    }
}